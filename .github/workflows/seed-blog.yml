name: Seed Blog to Postgres

on:
  workflow_dispatch:

jobs:
  seed:
    name: Run blog seeding script
    runs-on: ubuntu-latest
    permissions:
      contents: read
    env:
      DATABASE_URL: ${{ secrets.SUPABASE_DATABASE_URL }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'
          cache-dependency-path: 'website-integration/ArrowheadSolution/package-lock.json'

      - name: Install dependencies
        run: npm ci
        working-directory: website-integration/ArrowheadSolution

      - name: 'Preflight: tsx availability'
        run: npx tsx --version
        working-directory: website-integration/ArrowheadSolution

      - name: Verify env
        run: |
          if [ -z "$DATABASE_URL" ]; then
            echo "DATABASE_URL is not set. Add SUPABASE_DATABASE_URL as a GitHub Actions secret." >&2
            exit 1
          fi
          echo "DATABASE_URL is set (hidden)"
        working-directory: website-integration/ArrowheadSolution

      - name: 'Debug: resolve DB host (no secrets)'
        continue-on-error: true
        run: |
          node -e "(async()=>{const u=new URL(process.env.DATABASE_URL);console.log('host:',u.hostname);try{const dns=require('dns').promises;const a=await dns.lookup(u.hostname,{all:true});console.log('addresses:',a);}catch(e){console.error('DNS lookup failed:',e.message);console.log('Continuing...')}})()"
        working-directory: website-integration/ArrowheadSolution

      - name: 'Rewrite DATABASE_URL to IPv4 host'
        shell: bash
        run: |
          set -euo pipefail
          HOST=$(node -p "new URL(process.env.DATABASE_URL).hostname")
          echo "Host: $HOST"
          IPV4=$(getent ahostsv4 "$HOST" | awk 'NR==1{print $1}') || true
          if [ -z "${IPV4:-}" ]; then
            echo "No IPv4 via getent; trying Cloudflare (1.1.1.1)..."
            if ! command -v dig >/dev/null 2>&1; then
              sudo apt-get update && sudo apt-get install -y dnsutils
            fi
            IPV4=$(dig +short A "$HOST" @1.1.1.1 | head -n1 || true)
          fi
          if [ -z "${IPV4:-}" ]; then
            echo "No IPv4 address found; skipping rewrite"
          else
            NEW_URL=$(node -p "const u=new URL(process.env.DATABASE_URL); u.hostname='$IPV4'; if(!u.searchParams.has('sslmode')) u.searchParams.set('sslmode','require'); u.toString()")
            SANITIZED=$(node -p "const u=new URL(process.env.DATABASE_URL); u.hostname='$IPV4'; if(!u.searchParams.has('sslmode')) u.searchParams.set('sslmode','require'); u.toString().replace(/:[^:@\\/]+@/,'://****@')")
            echo "IPv4: $IPV4"
            echo "Rewritten DATABASE_URL (sanitized): $SANITIZED"
            echo "DATABASE_URL=$NEW_URL" >> "$GITHUB_ENV"
          fi
        working-directory: website-integration/ArrowheadSolution

      - name: Seed blog into Postgres
        run: npx tsx scripts/seed-blog.mts
        env:
          NODE_ENV: production
          NODE_OPTIONS: --dns-result-order=ipv4first
          PGSSLMODE: require
        working-directory: website-integration/ArrowheadSolution
