(function (React, designSystem, adminjs) {
  'use strict';

  function _interopDefault (e) { return e && e.__esModule ? e : { default: e }; }

  var React__default = /*#__PURE__*/_interopDefault(React);

  const api$1 = new adminjs.ApiClient();
  const Dashboard = () => {
    const [data, setData] = React.useState({
      counts: {
        users: 0,
        blogPosts: 0,
        sessions: 0,
        tasks: 0
      },
      recentAudit: []
    });
    React.useEffect(() => {
      api$1.getDashboard().then(res => {
        setData(res.data);
      }).catch(err => {
        console.error('Failed to load dashboard data', err);
      });
    }, []);
    return /*#__PURE__*/React__default.default.createElement(designSystem.Box, {
      variant: "container",
      width: 1,
      p: "lg"
    }, /*#__PURE__*/React__default.default.createElement(designSystem.H2, null, "Project Arrowhead \u2014 Admin Dashboard"), /*#__PURE__*/React__default.default.createElement(designSystem.Text, {
      mt: "md",
      mb: "xl"
    }, "Local development metrics"), /*#__PURE__*/React__default.default.createElement(designSystem.Section, null, /*#__PURE__*/React__default.default.createElement(designSystem.Box, {
      flex: true,
      flexDirection: "row",
      flexWrap: "wrap",
      gap: "xl"
    }, /*#__PURE__*/React__default.default.createElement(designSystem.ValueGroup, {
      label: "Users",
      value: String(data.counts.users)
    }), /*#__PURE__*/React__default.default.createElement(designSystem.ValueGroup, {
      label: "Blog Posts",
      value: String(data.counts.blogPosts)
    }), /*#__PURE__*/React__default.default.createElement(designSystem.ValueGroup, {
      label: "Sessions",
      value: String(data.counts.sessions)
    }), /*#__PURE__*/React__default.default.createElement(designSystem.ValueGroup, {
      label: "Tasks",
      value: String(data.counts.tasks)
    }))), /*#__PURE__*/React__default.default.createElement(designSystem.Section, {
      mt: "xl"
    }, /*#__PURE__*/React__default.default.createElement(designSystem.H2, null, "Recent Admin Activity"), /*#__PURE__*/React__default.default.createElement(designSystem.Table, {
      mt: "lg"
    }, /*#__PURE__*/React__default.default.createElement(designSystem.TableHead, null, /*#__PURE__*/React__default.default.createElement(designSystem.TableRow, null, /*#__PURE__*/React__default.default.createElement(designSystem.TableCell, null, "When"), /*#__PURE__*/React__default.default.createElement(designSystem.TableCell, null, "Admin"), /*#__PURE__*/React__default.default.createElement(designSystem.TableCell, null, "Action"), /*#__PURE__*/React__default.default.createElement(designSystem.TableCell, null, "Resource"), /*#__PURE__*/React__default.default.createElement(designSystem.TableCell, null, "Resource ID"), /*#__PURE__*/React__default.default.createElement(designSystem.TableCell, null, "IP"))), /*#__PURE__*/React__default.default.createElement(designSystem.TableBody, null, data.recentAudit.map(row => /*#__PURE__*/React__default.default.createElement(designSystem.TableRow, {
      key: row.id
    }, /*#__PURE__*/React__default.default.createElement(designSystem.TableCell, null, new Date(row.createdAt).toLocaleString()), /*#__PURE__*/React__default.default.createElement(designSystem.TableCell, null, "#", row.adminId), /*#__PURE__*/React__default.default.createElement(designSystem.TableCell, null, row.action), /*#__PURE__*/React__default.default.createElement(designSystem.TableCell, null, row.resource), /*#__PURE__*/React__default.default.createElement(designSystem.TableCell, null, row.resourceId || '-'), /*#__PURE__*/React__default.default.createElement(designSystem.TableCell, null, row.ipAddress || '-'))), data.recentAudit.length === 0 && /*#__PURE__*/React__default.default.createElement(designSystem.TableRow, null, /*#__PURE__*/React__default.default.createElement(designSystem.TableCell, {
      colSpan: 6
    }, /*#__PURE__*/React__default.default.createElement(designSystem.Text, null, "No recent entries")))))));
  };

  const api = new adminjs.ApiClient();
  const AdminUsersPage = () => {
    const [rows, setRows] = React.useState([]);
    React.useEffect(() => {
      api.getPage({
        pageName: 'Admin Users'
      }).then(res => setRows(res.data?.rows || [])).catch(err => console.error('Failed to load admin users', err));
    }, []);
    return /*#__PURE__*/React__default.default.createElement(designSystem.Box, {
      variant: "container",
      width: 1,
      p: "lg"
    }, /*#__PURE__*/React__default.default.createElement(designSystem.H2, null, "Admin Users"), /*#__PURE__*/React__default.default.createElement(designSystem.Table, {
      mt: "lg"
    }, /*#__PURE__*/React__default.default.createElement(designSystem.TableHead, null, /*#__PURE__*/React__default.default.createElement(designSystem.TableRow, null, /*#__PURE__*/React__default.default.createElement(designSystem.TableCell, null, "ID"), /*#__PURE__*/React__default.default.createElement(designSystem.TableCell, null, "Email"), /*#__PURE__*/React__default.default.createElement(designSystem.TableCell, null, "Role"), /*#__PURE__*/React__default.default.createElement(designSystem.TableCell, null, "Active"), /*#__PURE__*/React__default.default.createElement(designSystem.TableCell, null, "Last Login"), /*#__PURE__*/React__default.default.createElement(designSystem.TableCell, null, "Created"))), /*#__PURE__*/React__default.default.createElement(designSystem.TableBody, null, rows.map(u => /*#__PURE__*/React__default.default.createElement(designSystem.TableRow, {
      key: u.id
    }, /*#__PURE__*/React__default.default.createElement(designSystem.TableCell, null, u.id), /*#__PURE__*/React__default.default.createElement(designSystem.TableCell, null, u.email), /*#__PURE__*/React__default.default.createElement(designSystem.TableCell, null, u.role), /*#__PURE__*/React__default.default.createElement(designSystem.TableCell, null, u.isActive ? 'Yes' : 'No'), /*#__PURE__*/React__default.default.createElement(designSystem.TableCell, null, u.lastLogin ? new Date(u.lastLogin).toLocaleString() : '-'), /*#__PURE__*/React__default.default.createElement(designSystem.TableCell, null, new Date(u.createdAt).toLocaleString()))), rows.length === 0 && /*#__PURE__*/React__default.default.createElement(designSystem.TableRow, null, /*#__PURE__*/React__default.default.createElement(designSystem.TableCell, {
      colSpan: 6
    }, /*#__PURE__*/React__default.default.createElement(designSystem.Text, null, "No admin users found"))))));
  };

  AdminJS.UserComponents = {};
  AdminJS.UserComponents.Dashboard = Dashboard;
  AdminJS.UserComponents.AdminUsersPage = AdminUsersPage;

})(React, AdminJSDesignSystem, AdminJS);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
